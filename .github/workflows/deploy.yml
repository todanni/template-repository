name: Template - build and deploy a Go service to production

on:
# To enable deployments, uncomment the following two lines
#  push:
#    branches: [ main ]

jobs:
  build:
    runs-on: self-hosted
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Context for Buildx
        id: buildx-context
        run: |
          docker context create builders
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        with:
          version: latest
          endpoint: builders
      -
        name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      -
        name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./build/Dockerfile
          push: true
          tags: ${{ github.repository }}:latest
          platforms: linux/amd64
      -
        name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

          ## Send result to discord
      -
        name: Send discord failure message
        if: ${{ failure() }}
        uses: stegzilla/discord-notify@v4
        with:
          webhook_url: "https://discord.com/api/webhooks/${{ secrets.DISCORD_WEBHOOK_ID }}/${{ secrets.DISCORD_WEBHOOK_TOKEN }}"
          colour: "#FF0000"
          title: ":japanese_goblin: Failed to build image for ${{ github.repository }}"
          message: "${{ github.event.commits[0].message }}"
          title_url: "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id}}"
          avatar_url: "https://github.com/todanni/auth/blob/main/images/account-lock-outline.png?raw=true"

      -
        name: Send discord success message
        if: ${{ success() }}
        uses: stegzilla/discord-notify@v4
        with:
          webhook_url: "https://discord.com/api/webhooks/${{ secrets.DISCORD_WEBHOOK_ID }}/${{ secrets.DISCORD_WEBHOOK_TOKEN }}"
          colour: "#48f442"
          title: ":tools: Successfully built image for ${{ github.repository }}"
          message: "${{ github.event.commits[0].message }}"
          title_url: "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id}}"
          avatar_url: "https://github.com/todanni/auth/blob/main/images/account-lock-outline.png?raw=true"

          ## Send result to discord
  run:
    runs-on: self-hosted
    needs: [build]
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
        ## Run
      -
        name: Run
        uses: appleboy/ssh-action@master
        env:
          GITHUB_USERNAME: danni-popova
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ## Traefik labels
          HOST_LABEL: traefik.http.routers.${{ github.event.repository.name }}.rule=Host(`todanni.com`) && PathPrefix(`/`)
          MIDDLEWARE_LABEL: traefik.http.routers.${{ github.event.repository.name }}.middlewares=https-redirect@docker
# Change the path prefix to the paths your Go HTTP server is accepting
          TLS_HOST_LABEL: traefik.http.routers.${{ github.event.repository.name }}-tls.rule=Host(`todanni.com`) && PathPrefix(`/api/calendar`)
          TLS_CERT_LABEL: traefik.http.routers.${{ github.event.repository.name }}-tls.tls.certresolver=letsencrypt
          TLS_LABEL: traefik.http.routers.${{ github.event.repository.name }}-tls.tls=true
          ENABLE_LABEL: traefik.enable=true

        with:
          host: ${{ secrets.DROPLET_IP }}
          username: root
          key: ${{ secrets.ADMIN_SSH_KEY }}
          envs:  TLS_HOST_LABEL,TLS_CERT_LABEL,TLS_LABEL,ENABLE_LABEL
          script: |
            VAULT_ADDR='https://vault.todanni.com' VAULT_TOKEN=${{ secrets.VAULT_TOKEN }} vault kv get -format yaml -field data  ci/${{ github.event.repository.name }} > .env
            sed -i 's/: /=/g' .env
            sed -i 's/"//g' .env
            docker login -u ${{ secrets.DOCKER_USERNAME }} -p "${{ secrets.DOCKER_PASSWORD }}"
            docker pull ${{ github.repository }}:latest
            docker rm -f ${{ github.event.repository.name }} 
            docker run -d --name ${{ github.event.repository.name }} --network ${{ secrets.NETWORK }} --label "$TLS_HOST_LABEL" --label "$TLS_LABEL" --label "$TLS_CERT_LABEL" --label "$ENABLE_LABEL" --env-file .env  ${{ github.repository }}
      -
        name: Send discord failure message
        if: ${{ failure() }}
        uses: stegzilla/discord-notify@v4
        with:
          webhook_url: "https://discord.com/api/webhooks/${{ secrets.DISCORD_WEBHOOK_ID }}/${{ secrets.DISCORD_WEBHOOK_TOKEN }}"
          colour: "#FF0000"
          title: ":boom: Failed to deploy latest image for ${{ github.repository }}"
          message: "${{ github.event.commits[0].message }}"
          title_url: "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id}}"
          avatar_url: "https://github.com/todanni/auth/blob/main/images/account-lock-outline.png?raw=true"

      -
        name: Send discord success message
        if: ${{ success() }}
        uses: stegzilla/discord-notify@v4
        with:
          webhook_url: "https://discord.com/api/webhooks/${{ secrets.DISCORD_WEBHOOK_ID }}/${{ secrets.DISCORD_WEBHOOK_TOKEN }}"
          colour: "#48f442"
          title: ":rocket: Successfully deployed latest image to production for ${{ github.repository }}"
          message: "${{ github.event.commits[0].message }}"
          title_url: "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id}}"
          avatar_url: "https://github.com/todanni/auth/blob/main/images/account-lock-outline.png?raw=true"